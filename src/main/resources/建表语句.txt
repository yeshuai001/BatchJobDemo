-------------------------------- 【ElasticJob Tables】 --------------------------------
drop table if exists loantt.job_execution_log ;
drop table if exists loantt.job_status_trace_log ;

create table loantt.job_execution_log (
  id varchar(40) not null comment '主键',
  job_name varchar(100) not null comment '作业名称',
  task_id varchar(1000) not null comment '任务名称,每次作业运行生成新任务',
  hostname varchar(255) not null comment '主机名称',
  ip varchar(50) not null comment '主机IP',
  sharding_item int not null comment '分片项',
  execution_source varchar(20) not null comment '作业执行来源,可选值为NORMAL_TRIGGER, MISFIRE, FAILOVER',
  failure_cause varchar(2000) comment '执行失败原因',
  is_success bit not null comment '是否执行成功',
  start_time timestamp not null comment '作业开始执行时间',
  complete_time timestamp comment '作业结束执行时间',
  primary key (id)
) engine=innodb default charset=utf8;


create table loantt.job_status_trace_log (
  id varchar(40) not null comment '主键',
  job_name varchar(100) not null comment '作业名称',
  original_task_id varchar(1000) not null comment '原任务名称',
  task_id varchar(1000) not null comment '任务名称',
  slave_id varchar(1000) not null comment '执行作业服务器的名称，Lite版本为服务器的IP地址',
  source varchar(50) not null comment '任务执行源，可选值为LITE_EXECUTOR',
  execution_type varchar(20) not null comment '任务执行类型，可选值为NORMAL_TRIGGER, MISFIRE, FAILOVER',
  sharding_item varchar(255) not null comment '分片项集合，多个分片项以逗号分隔',
  state varchar(20) not null comment '任务执行状态，可选值为TASK_STAGING, TASK_RUNNING, TASK_FINISHED, TASK_KILLED, TASK_LOST, TASK_FAILED, TASK_ERROR',
  message varchar(2000) not null comment '相关信息',
  creation_time timestamp not null comment '创建时间',
  primary key (id)
) engine=innodb default charset=utf8;
-------------------------------- 【ElasticJob Tables】 --------------------------------


-------------------------------- 【Spring Batch Tables】 --------------------------------
set foreign_key_checks = 0;

drop table if exists loantt.batch_step_execution_context ;
drop table if exists loantt.batch_job_execution_context ;
drop table if exists loantt.batch_step_execution ;
drop table if exists loantt.batch_job_execution_params ;
drop table if exists loantt.batch_job_execution ;
drop table if exists loantt.batch_job_instance ;
drop table if exists loantt.batch_step_execution_seq ;
drop table if exists loantt.batch_job_execution_seq ;
drop table if exists loantt.batch_job_seq ;

create table loantt.batch_job_instance  (
	job_instance_id bigint  not null primary key ,
	version bigint ,
	job_name varchar(100) not null,
	job_key varchar(32) not null,
	constraint job_inst_un unique (job_name, job_key)
)  engine=innodb default charset=utf8;

create table loantt.batch_job_execution  (
	job_execution_id bigint  not null primary key ,
	version bigint  ,
	job_instance_id bigint not null,
	create_time datetime not null,
	start_time datetime default null ,
	end_time datetime default null ,
	status varchar(10) ,
	exit_code varchar(2500) ,
	exit_message varchar(2500) ,
	last_updated datetime,
	job_configuration_location varchar(2500) null,
	constraint job_inst_exec_fk foreign key (job_instance_id)
	references batch_job_instance(job_instance_id)
)  engine=innodb default charset=utf8;

create table loantt.batch_job_execution_params  (
	job_execution_id bigint not null ,
	type_cd varchar(6) not null ,
	key_name varchar(100) not null ,
	string_val varchar(250) ,
	date_val datetime default null ,
	long_val bigint ,
	double_val double precision ,
	identifying char(1) not null ,
	constraint job_exec_params_fk foreign key (job_execution_id)
	references batch_job_execution(job_execution_id)
)  engine=innodb default charset=utf8;

create table loantt.batch_step_execution  (
	step_execution_id bigint  not null primary key ,
	version bigint not null,
	step_name varchar(100) not null,
	job_execution_id bigint not null,
	start_time datetime not null ,
	end_time datetime default null ,
	status varchar(10) ,
	commit_count bigint ,
	read_count bigint ,
	filter_count bigint ,
	write_count bigint ,
	read_skip_count bigint ,
	write_skip_count bigint ,
	process_skip_count bigint ,
	rollback_count bigint ,
	exit_code varchar(2500) ,
	exit_message varchar(2500) ,
	last_updated datetime,
	constraint job_exec_step_fk foreign key (job_execution_id)
	references batch_job_execution(job_execution_id)
)  engine=innodb default charset=utf8;

create table loantt.batch_step_execution_context  (
	step_execution_id bigint not null primary key,
	short_context varchar(2500) not null,
	serialized_context text ,
	constraint step_exec_ctx_fk foreign key (step_execution_id)
	references batch_step_execution(step_execution_id)
)  engine=innodb default charset=utf8;

create table loantt.batch_job_execution_context  (
	job_execution_id bigint not null primary key,
	short_context varchar(2500) not null,
	serialized_context text ,
	constraint job_exec_ctx_fk foreign key (job_execution_id)
	references batch_job_execution(job_execution_id)
)  engine=innodb default charset=utf8;

create table loantt.batch_step_execution_seq (
	id bigint not null,
	unique_key char(1) not null,
	constraint unique_key_un unique (unique_key)
)  engine=innodb default charset=utf8;

insert into loantt.batch_step_execution_seq (id, unique_key) select * from (select 0 as id, '0' as unique_key) as tmp where not exists(select * from batch_step_execution_seq);

create table loantt.batch_job_execution_seq (
	id bigint not null,
	unique_key char(1) not null,
	constraint unique_key_un unique (unique_key)
)  engine=innodb default charset=utf8;

insert into loantt.batch_job_execution_seq (id, unique_key) select * from (select 0 as id, '0' as unique_key) as tmp where not exists(select * from batch_job_execution_seq);

create table loantt.batch_job_seq (
	id bigint not null,
	unique_key char(1) not null,
	constraint unique_key_un unique (unique_key)
)  engine=innodb default charset=utf8;

insert into loantt.batch_job_seq (id, unique_key) select * from (select 0 as id, '0' as unique_key) as tmp where not exists(select * from batch_job_seq);

set foreign_key_checks = 1;
-------------------------------- 【Spring Batch Tables】 --------------------------------